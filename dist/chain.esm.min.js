var i=class{events={};on(t,e){typeof this.events[t]!="object"&&(this.events[t]=[]),this.events[t].push(e);let r=this;return function(){r.removeListener(t,e)}}removeListener(t,e){var r;typeof this.events[t]=="object"&&(r=this.events[t].indexOf(e),r>-1&&this.events[t].splice(r,1))}emit(t){if(typeof this.events[t]=="object"){var e,r,s,n=[].slice.call(arguments,1);for(r=this.events[t].slice(),s=r.length,e=0;e<s;e++)try{r[e].apply(this,n)}catch(o){console.error(t,n),console.error(o)}}}once(t,e){return this.on(t,function r(){this.removeListener(t,r),e.apply(this,arguments)})}};function f(l){return new Promise(t=>setTimeout(t,l))}var a=class{abortController=new AbortController;constructor(t){this.chain=t}cancel(){throw this.chain.returnValue=null,this.abortController.abort(),new Error("Cancel")}complete(t){throw this.chain.returnValue=t,this.abortController.abort(),new Error("Complete")}raiseError(t){throw this.chain.returnValue=null,this.abortController.abort(),t}sleep(t){return new Promise((e,r)=>{let s=()=>{clearTimeout(n),r(new Error("Cancel"))},n=setTimeout(()=>{this.abortController.signal.removeEventListener("abort",s),e()},t);this.abortController.signal.addEventListener("abort",s)})}fetch(t,e){return fetch(t,Object.assign({},e,{signal:this.abortController.signal}))}wrap(t){let e=this;return function(...s){return new Promise((n,o)=>{let h=()=>{o(new Error("Cancel"))};e.abortController.signal.addEventListener("abort",h),t(...s).then(c=>{e.abortController.signal.removeEventListener("abort",h),n(c)}).catch(o)})}}get ctx(){return this.chain.getCtx()}},u=class{#r=new i;tasks=[];returnValue;completedSuccessfully=!1;isRunning=!1;#s={};#t=new a(this);on(t,e){return this.#r.on(t,e)}add(t){return this.tasks.push(t),this}#e(t,e){this.#r.emit(t,e)}async run(t){if(t=t||{},this.isRunning)throw new Error("Already running");this.#t=new a(this),this.isRunning=!0;var e=void 0;this.completedSuccessfully=!1,this.returnValue=null,this.#s=t,this.#e("run",{chain:this,taskIndex:-1,error:null});for(var r=0;this.tasks[r];){try{if(this.#t.abortController.signal.aborted){this.#t.cancel();return}e=await this.tasks[r](e,this.#t)}catch(s){return this.isRunning=!1,s.message=="Complete"?(this.isRunning=!1,this.completedSuccessfully=!0,this.#e("complete",{chain:this,error:null,taskIndex:r}),this.returnValue):s.message=="Cancel"?(this.isRunning=!1,this.completedSuccessfully=!1,this.#e("cancel",{chain:this,error:null,taskIndex:r}),null):(this.isRunning=!1,this.completedSuccessfully=!1,this.returnValue=null,this.#e("error",{chain:this,error:s,taskIndex:r}),null)}r++}return this.isRunning=!1,this.completedSuccessfully=!0,this.returnValue=e,this.#e("complete",{chain:this,error:null,taskIndex:r-1}),e}async waitForChainToFinish(){for(;this.isRunning;)await f(100)}async cancel(){this.isRunning&&this.#t.abortController.abort("Cancel"),await this.waitForChainToFinish()}getCtx(){return this.#s}};export{u as Chain};
