var i=class{events={};on(e,t){typeof this.events[e]!="object"&&(this.events[e]=[]),this.events[e].push(t);let r=this;return function(){r.removeListener(e,t)}}removeListener(e,t){var r;typeof this.events[e]=="object"&&(r=this.events[e].indexOf(t),r>-1&&this.events[e].splice(r,1))}emit(e){if(typeof this.events[e]=="object"){var t,r,s,o=[].slice.call(arguments,1);for(r=this.events[e].slice(),s=r.length,t=0;t<s;t++)try{r[t].apply(this,o)}catch(h){console.error(e,o),console.error(h)}}}once(e,t){return this.on(e,function r(){this.removeListener(e,r),t.apply(this,arguments)})}};function u(n){return new Promise(e=>setTimeout(e,n))}var l=class{abortController=new AbortController;constructor(e){this.chain=e}cancel(){throw this.chain.returnValue=null,this.abortController.abort(),new Error("Cancel")}complete(e){throw this.chain.returnValue=e,this.abortController.abort(),new Error("Complete")}raiseError(e){throw this.chain.returnValue=null,this.abortController.abort(),e}sleep(e){return new Promise((t,r)=>{let s=setTimeout(t,e);this.abortController.signal.addEventListener("abort",()=>{clearTimeout(s),r(new Error("Cancel"))})})}fetch(e,t){return fetch(e,Object.assign({},t,{signal:this.abortController.signal}))}get ctx(){return this.chain.getCtx()}},a=class{#r=new i;tasks=[];returnValue;completedSuccessfully=!1;isRunning=!1;#s={};#e=new l(this);on(e,t){return this.#r.on(e,t)}add(e){return this.tasks.push(e),this}#t(e,t){this.#r.emit(e,t)}async run(e){if(e=e||{},this.isRunning)throw new Error("Already running");this.#e=new l(this),this.isRunning=!0;var t=void 0;this.completedSuccessfully=!1,this.returnValue=null,this.#s=e,this.#t("run",{chain:this,taskIndex:-1,error:null});for(var r=0;this.tasks[r];){try{if(this.#e.abortController.signal.aborted){this.#e.cancel();return}t=await this.tasks[r](t,this.#e)}catch(s){return this.isRunning=!1,s.message=="Complete"?(this.isRunning=!1,this.completedSuccessfully=!0,this.#t("complete",{chain:this,error:null,taskIndex:r}),this.returnValue):s.message=="Cancel"?(this.isRunning=!1,this.completedSuccessfully=!1,this.#t("cancel",{chain:this,error:null,taskIndex:r}),null):(this.isRunning=!1,this.completedSuccessfully=!1,this.returnValue=null,this.#t("error",{chain:this,error:s,taskIndex:r}),null)}r++}return this.isRunning=!1,this.completedSuccessfully=!0,this.returnValue=t,this.#t("complete",{chain:this,error:null,taskIndex:r-1}),t}async waitForChainToFinish(){for(;this.isRunning;)await u(100)}async cancel(){this.isRunning&&this.#e.abortController.abort("Cancel"),await this.waitForChainToFinish()}getCtx(){return this.#s}};export{a as Chain};
